<%- include('header', {title: `Edit task`}); -%> <%- include('navbar'); -%>
<div class ="grid grid-cols-1 md:grid-cols-2">
<div class="block p-6 rounded-lg bg-white max-w-md">
  
  <form autocomplete="off" action="/task/<%=ejsData.id%>/edit?_method=PUT" method="POST">
    <h2 class="text-lg">Edit task</h2>
  <p>Existing task will be updated</p>
  <br/>
      <label for ="task_status_id" class="label">
  Task status
  <select name="task_status_id" class="form-select appearance-none
      block
      w-full
      px-3
      py-1.5
      text-sm
      font-normal
      text-gray-700
      bg-white bg-clip-padding bg-no-repeat
      border border-solid border-gray-300
      rounded
      transition
      ease-in-out
      m-0
      focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none" aria-label="Default select example">
    <option value="" disabled selected hidden>Select status</option>
<% ejsStatusOptions.forEach((item) => { %>
      <% let selectBoolean = ( ejsData.task_status_id == item.id ) ? "selected" : ""; %>
    <option value="<%= item.id %>" <%= selectBoolean %> ><%= item.status %></option>
    <% }); %>
  </select>
</label>
<p class="errormsg"><%= error.filter(item => item.param === 'task_status_id').map(item => item.msg) %></p>
<br/>

  <label for="due_date" class="label">Due date</label>
      <div class="relative">
      <div class="flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none">
      </div>
      <input id="date" name="due_date" datepicker type="text" class="form-control input" placeholder="MM/DD/YYYY" value="<%=ejsData.due_date%>">
      <p class="errormsg"><%= error.filter(item => item.param === 'due_date').map(item => item.msg) %></p>
      </div>
      <br/>

  <div class="form-group mb-6">
      <label class="label" for="name">Task name</label>
      <input type="text" name="name" class="form-control input" id="exampleInput7"
        placeholder="Task name" value="<%=ejsData.name%>">
        <p class="errormsg"><%= error.filter(item => item.param === 'name').map(item => item.msg) %></p>
    </div>

  <div class="row form-group">
      <label for="description" class="label mb-2">Task description</label>
      <input name="description" type="hidden" />
      <div id="editor-container"></div>
      <p class="errormsg"><%= error.filter(item => item.param === 'description').map(item => item.msg) %></p>
    </div>
  
  <br>

    <label for ="assigned_to" class="label">
  Assign to
  <select name="assigned_to" class="form-select appearance-none
      block
      w-full
      px-3
      py-1.5
      text-sm
      font-normal
      text-gray-700
      bg-white bg-clip-padding bg-no-repeat
      border border-solid border-gray-300
      rounded
      transition
      ease-in-out
      m-0
      focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none" aria-label="Default select example">
    <option value="" disabled selected hidden>Select user</option>
<% ejsUser.forEach((item) => { %>
      <% let selectBoolean = ( ejsData.assigned_to == item.id ) ? "selected" : ""; %>
    <option value="<%= item.id %>" <%= selectBoolean %> ><%= item.name %></option>
    <% }); %>
  </select>
</label>
<p class="errormsg"><%= error.filter(item => item.param === 'assigned_to').map(item => item.msg) %></p>
<br/>

<label for ="label_id" class="label">
  Label

  <button type="button" class="ml-4 inline-block px-6 py-2.5 bg-transparent text-blue-600 font-medium text-xs leading-tight uppercase rounded hover:text-blue-700 hover:bg-gray-100 focus:bg-gray-100 focus:outline-none focus:ring-0 active:bg-gray-200 transition duration-150 ease-in-out" data-bs-toggle="modal" data-bs-target="#exampleModalCenter">
    Add label
  </button>

  <select name="label_id" class="form-multiselect block w-full mt-1 input" multiple>

<% ejsLabelOptions.forEach((item) => { %>
    <% let selectLabel = (ejsLabel.includes(item.id.toString())) ? "selected" : ""; %>
    <option value="<%= item.id %>" <%= selectLabel %> ><%= item.label %></option>
 <% }); %>

  </select>
</label>
<p class="errormsg"><%= error.filter(item => item.param === 'label_id').map(item => item.msg) %></p>
<br/>
    <button type="submit" class="btn">Submit</button>
    </div> 
  </form>


  <!-- Comments section -->
<form action="/task/<%=ejsData.id%>/comment" method="POST">
<div class="flex justify-center my-6 mr-6">
<ol class="relative border-l border-gray-200 dark:border-gray-700">
  <% ejsComment.forEach((data) => { %>                  
    <li class="mb-10 ml-6">
        <span class="flex absolute -left-3 justify-center items-center w-6 h-6 bg-blue-200 rounded-full ring-8 ring-white dark:ring-gray-900 dark:bg-blue-900">
            <img class="rounded-full shadow-lg" src="/<%=ejsUser.filter(user => user.id === data.user_id).map(user => user.avatar) %>" alt="user avatar"/>
        </span>
        <div class="w-64 sm:w-96 md:w-120 p-4 bg-white rounded-lg border border-gray-200 shadow-sm dark:bg-gray-700 dark:border-gray-600">
            <div class="justify-between items-center mb-3 sm:flex">
               <time class="mb-1 text-xs font-normal text-gray-400 sm:order-last sm:mb-0"><%= data.created_at %></time>
                <div class="text-sm font-normal text-gray-500 lex dark:text-gray-300"><%=ejsUser.filter(user => user.id === data.user_id).map(user => user.name) %> commented on Task <%= data.task_id %></div>
            </div>
            <div class="p-3 text-xs italic font-normal text-gray-500 bg-gray-50 rounded-lg border border-gray-200 dark:bg-gray-600 dark:border-gray-500 dark:text-gray-300"><%= data.comment %></div>
        </div>
    </li>
    <% }); %>
 
    <li class="mb-10 ml-6">
        <span class="flex absolute -left-3 justify-center items-center w-6 h-6 bg-blue-200 rounded-full ring-8 ring-white dark:ring-gray-900 dark:bg-blue-900">
            <img class="rounded-full shadow-lg" src="/<%=active_user%>" alt="user avatar"/>
        </span>
        <div class="p-4 bg-white rounded-lg border border-gray-200 shadow-sm dark:bg-gray-700 dark:border-gray-600">
          <label for="comment"></label>
            <textarea class="w-full p-3 text-xs italic font-normal text-gray-500 bg-gray-50 rounded-lg border border-gray-200 dark:bg-gray-600 dark:border-gray-500 dark:text-gray-300"
            name="comment" placeholder="Leave your comment here"></textarea>
            <p class="errormsg"><%= error.filter(item => item.param === 'comment').map(item => item.msg) %></p>
            <br/>
            <button type="submit" class="py-2 px-3 text-xs font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Leave a comment</button>
        </div>
    </li>
</ol>
</div>
</form>

<!-- Modal -->
<form action="/task/<%=ejsData.id%>/label/0" method="POST">
<div class="modal fade fixed top-0 left-0 hidden w-full h-full outline-none overflow-x-hidden overflow-y-auto" id="exampleModalCenter" tabindex="-1" aria-labelledby="exampleModalCenterTitle" aria-modal="true" role="dialog">
  <div class="modal-dialog modal-dialog-centered relative w-auto pointer-events-none">
    <div class="modal-content border-none shadow-lg relative flex flex-col w-full pointer-events-auto bg-white bg-clip-padding rounded-md outline-none text-current">
      <div class="modal-header flex flex-shrink-0 items-center justify-between p-4 border-b border-gray-200 rounded-t-md">
        <h5 class="text-xl font-medium leading-normal text-gray-800" id="exampleModalScrollableLabel">
          Add new label
        </h5>
        <button type="button"
          class="btn-close box-content w-4 h-4 p-1 text-black border-none rounded-none opacity-50 focus:shadow-none focus:outline-none focus:opacity-100 hover:text-black hover:opacity-75 hover:no-underline"
          data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body relative p-4">
        <div class="flex justify-center">
  <div class="mb-3 xl:w-96">
    <label for="label" class="form-label inline-block mb-2 text-gray-700"
      >Label</label
    >
    <input
      type="text"
      class="input"
      id="exampleText0"
      name="label"
      placeholder="eg. Product"
    />
  </div>
</div>
      </div>
      <div
        class="modal-footer flex flex-shrink-0 flex-wrap items-center justify-end p-4 border-t border-gray-200 rounded-b-md">
        <button type="button"
          class="inline-block px-6 py-2.5 bg-purple-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-purple-700 hover:shadow-lg focus:bg-purple-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-purple-800 active:shadow-lg transition duration-150 ease-in-out"
          data-bs-dismiss="modal">
          Close
        </button>
        <button type="submit"
          class="btn ml-1">
          Save changes
        </button>
      </div>
    </div>
  </div>

</div>
</form>

</div>


<!-- Include the Quill library -->
<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>

<script>
  var quill = new Quill("#editor-container", {
    modules: {
      toolbar: [
        ["bold", "italic", "underline"],
        ["link", "blockquote", "code-block", "image"],
        [{ list: "ordered" }, { list: "bullet" }],
      ],
    },
    placeholder: "Compose an epic...",
    theme: "snow",
  });

  Quill.prototype.getHTML = function () {
    return this.container.querySelector(".ql-editor").innerHTML;
  };
  Quill.prototype.setHTML = function (html) {
    this.container.querySelector(".ql-editor").innerHTML = html;
  };

  function decodeHtml(html) {
    var txt = document.createElement("textarea");
    txt.innerHTML = html;
    return txt.value;
  }
  // usages
  quill.setHTML(decodeHtml(`<%=ejsData.description%>`));

  var form = document.querySelector("form");
  form.onsubmit = function () {
    // Populate hidden form on submit
    var description = document.querySelector("input[name=description]");
    description.value = quill.root.innerHTML.split("  ").join(" &nbsp;");;

    console.log("Submitted", $(form).serialize(), $(form).serializeArray());

    // No back end to actually submit to!
    alert("Open the console to see the submit data!");
    return false;
  };
</script>


  </body>
</html>